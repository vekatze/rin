import {
  core.int.show {show-int},
  http-base.field {Field},
  http-base.header.show {show-header},
  http-base.request {Request},
  http-base.request-method {GET},
  http-base.response {Response},
  this.error {show-error},
  this.scene {ask},
}

define main(): unit {
  let result =
    ask(
      "https://example.com",
      Request of {
        method = GET,
        path = *"/aoeu",
        fields = {
          [
            Field(*"My-Field", *"hoge"),
            Field(*"Content-Type", *"application/json"),
            Field(*"x-my-extension", *"Bearer 1234567890"),
          ]
        },
        body = *"",
      },
      10,
      100,
    )
  in
  match result {
  | Right(response) =>
    let Response of {status-code, body, fields} = response in
    printf("success:\n{}\n", [body]);
    printf("header:\n{}\n", [show-header(fields)]);
    printf("status-code:\n{}\n", [show-int(status-code)])
  | Left(e) =>
    printf("failure: {}\n", [show-error(e)])
  }
}

define zen(): unit {
  main()
}
